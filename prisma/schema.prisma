// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UserConfig {
  id                String   @id @default(uuid())
  theme             String   @default("light") // light, dark, system
  notifications     Boolean  @default(true)
  emailNotifications Boolean  @default(true)
  interfaceDensity  String   @default("default") // compact, default, comfortable
  fontSize          Int      @default(16)
  language          String   @default("pt-BR")
  dateFormat        String   @default("DD/MM/YYYY")
  timeFormat        String   @default("24h") // 12h, 24h
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  userId            String   @unique
  user              User     @relation(fields: [userId], references: [id])
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String?
  password  String
  avatar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  events    Event[]
  config    UserConfig?
}

model Event {
  id          String   @id @default(uuid())
  title       String
  description String?
  image       String?
  date        DateTime
  location    String?
  type        String   @default("other") // birthday, wedding, corporate, etc.
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  invites     Invite[]
  notes        String?
  maxGuests    String?
  guests      Guest[]
}

model Invite {
  id          String   @id @default(uuid())
  templateId  String   @default("default")
  customText  String?
  title       String?
  eventTitle  String?
  imageUrl    String?
  description String?
  bgColor     String?  @default("#ffffff")
  textColor   String?  @default("#000000")
  accentColor String?  @default("#5e35b1")
  fontFamily  String?  @default("Poppins")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  eventId     String
  event       Event    @relation(fields: [eventId], references: [id], onDelete: Cascade)
  guests      Guest[]
}

model Guest {
  id           String    @id @default(uuid())
  name         String
  email        String?
  phone        String?
  status       String    @default("pending") // pending, confirmed, declined
  plusOne      Boolean   @default(false)
  plusOneName  String?
  group        String?
  whatsapp     Boolean   @default(false)
  notes        String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  eventId      String?
  imageUrl     String?
  event        Event?     @relation(fields: [eventId], references: [id], onDelete: SetNull)
  inviteId     String?
  invite       Invite?   @relation(fields: [inviteId], references: [id], onDelete: SetNull)
  messages     Message[]
}

model Message {
  id        String   @id @default(uuid())
  type      String   // invite, reminder, confirmation
  content   String
  status    String   // sent, delivered, read, failed
  sentAt    DateTime @default(now())
  guestId   String
  guest     Guest    @relation(fields: [guestId], references: [id])
}
